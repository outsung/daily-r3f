/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    Mesh_honey: THREE.Mesh;
    Mesh_honey_1: THREE.Mesh;
    Mesh_honey_2: THREE.Mesh;
  };
  materials: {
    brownLight: THREE.MeshStandardMaterial;
    brownDark: THREE.MeshStandardMaterial;
    yellow: THREE.MeshStandardMaterial;
  };
};

export function HoneyModel(props: JSX.IntrinsicElements["group"]) {
  const group = useRef();

  // @ts-ignore
  const { nodes, materials } = useGLTF(
    "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/honey/model.gltf"
  ) as GLTFResult;

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Mesh_honey.geometry}
        material={materials.brownLight}
      />
      <mesh
        geometry={nodes.Mesh_honey_1.geometry}
        material={materials.brownDark}
      />
      <mesh
        geometry={nodes.Mesh_honey_2.geometry}
        material={materials.yellow}
      />
    </group>
  );
}

useGLTF.preload(
  "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/honey/model.gltf"
);
